{"version":3,"sources":["components/createProject.jsx","components/material.js","components/ProjectDetails.js","App.js","serviceWorker.js","index.js"],"names":["CreateProject","props","onChangeProject","bind","onChangeTask","onChangeProgrammer","onChangeStatus","onSubmit","state","open","date","project","task","programmer","status","e","this","setState","target","value","preventDefault","obj","Date","today","getDate","getMonth","getFullYear","axios","post","then","res","setTimeout","className","FormControl","TextField","id","label","onChange","InputLabel","Select","labelId","MenuItem","Button","variant","color","type","Snackbar","autoHideDuration","anchorOrigin","vertical","horizontal","Alert","severity","Component","columns","title","field","lookup","Prachi","Ketan","Karishma","Kaleem","completed","render","rowData","to","pathname","MaterialTableDemo","useHistory","useState","projects","setProjects","useEffect","get","response","data","reverse","console","log","catch","error","Fragment","style","position","bottom","right","Fab","aria-label","size","options","actionsColumnIndex","addRowPosition","editable","history","tasks","setTasks","undefined","location","push","onRowAdd","newData","Promise","resolve","onRowUpdate","oldData","_id","onRowDelete","length","err","App","src","alt","exact","path","component","DataTable","ProjectDetails","Boolean","window","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.7569a04a.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  TextField,\r\n  Select,\r\n  FormControl,\r\n  InputLabel,\r\n  Button,\r\n  MenuItem,\r\n} from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\n\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\n\r\nexport default class CreateProject extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChangeProject = this.onChangeProject.bind(this);\r\n    this.onChangeTask = this.onChangeTask.bind(this);\r\n    this.onChangeProgrammer = this.onChangeProgrammer.bind(this);\r\n    this.onChangeStatus = this.onChangeStatus.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n\r\n    this.state = {\r\n      open: false,\r\n      date: \"\",\r\n      project: \"\",\r\n      task: \"\",\r\n      programmer: \"\",\r\n      status: \"\",\r\n    };\r\n  }\r\n\r\n  onChangeProject(e) {\r\n    this.setState({\r\n      project: e.target.value,\r\n    });\r\n  }\r\n\r\n  onChangeTask(e) {\r\n    this.setState({\r\n      task: e.target.value,\r\n    });\r\n  }\r\n\r\n  onChangeProgrammer(e) {\r\n    this.setState({\r\n      programmer: e.target.value,\r\n    });\r\n  }\r\n  onChangeStatus(e) {\r\n    this.setState({\r\n      status: e.target.value,\r\n    });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    var obj = {\r\n      project: this.state.project,\r\n      task: this.state.task,\r\n      programmer: this.state.programmer,\r\n      status: this.state.status,\r\n    };\r\n\r\n    var date = new Date();\r\n\r\n    var today =\r\n      date.getDate() + \"/\" + (date.getMonth() + 1) + \"/\" + date.getFullYear();\r\n\r\n    obj = { ...obj, date: today };\r\n\r\n    axios.post(\"http://localhost:4000/projects/add\", obj).then((res) => {\r\n      this.setState({ open: true });\r\n      setTimeout(() => {\r\n        this.setState({ open: false });\r\n      }, 5000);\r\n    });\r\n    this.setState({\r\n      date: \"\",\r\n      project: \"\",\r\n      task: \"\",\r\n      programmer: \"\",\r\n      status: \"\",\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <form onSubmit={this.onSubmit}>\r\n          <div className=\"card p-3 col-6\">\r\n            <h4>Add Project</h4>\r\n\r\n            <FormControl>\r\n              <TextField\r\n                id=\"project-name\"\r\n                label=\"Project Name\"\r\n                onChange={this.onChangeProject}\r\n                value={this.state.project}\r\n              />\r\n            </FormControl>\r\n            <br></br>\r\n            <FormControl>\r\n              <TextField\r\n                id=\"project-task\"\r\n                label=\"Task\"\r\n                onChange={this.onChangeTask}\r\n                value={this.state.task}\r\n              />\r\n            </FormControl>\r\n            <br></br>\r\n            <FormControl>\r\n              <InputLabel id=\"programmer-label\">Progarmmer</InputLabel>\r\n              <Select\r\n                labelId=\"programmer\"\r\n                id=\"programmer\"\r\n                onChange={this.onChangeProgrammer}\r\n                value={this.state.programmer}\r\n              >\r\n                <MenuItem value={\"Prachi\"}>Prachi</MenuItem>\r\n                <MenuItem value={\"Ketan\"}>Ketan</MenuItem>\r\n                <MenuItem value={\"Karishma\"}>Karishma</MenuItem>\r\n                <MenuItem value={\"Kaleem\"}>Kaleem</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n            <br></br>\r\n            <FormControl>\r\n              <InputLabel id=\"status-label\">Status</InputLabel>\r\n              <Select\r\n                labelId=\"status\"\r\n                id=\"status\"\r\n                onChange={this.onChangeStatus}\r\n                value={this.state.status}\r\n              >\r\n                <MenuItem value={\"completed\"}>Completed</MenuItem>\r\n                <MenuItem value={\"in-process\"}>In Process</MenuItem>\r\n                <MenuItem value={\"on-hold\"}>On Hold</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n            <br></br>\r\n            <FormControl>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className=\"float-right\"\r\n                type=\"submit\"\r\n              >\r\n                Save\r\n              </Button>\r\n            </FormControl>\r\n          </div>\r\n        </form>\r\n\r\n        <Snackbar\r\n          open={this.state.open}\r\n          autoHideDuration={3000}\r\n          anchorOrigin={{ vertical: \"bottom\", horizontal: \"left\" }}\r\n        >\r\n          <Alert severity=\"success\" className=\"alert alert-primary\">\r\n            Project added successfully\r\n          </Alert>\r\n        </Snackbar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  useHistory,\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n} from \"react-router-dom\";\r\nimport { AppBar, Toolbar, Typography, Button } from \"@material-ui/core\";\r\nimport MaterialTable from \"material-table\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\n\r\nimport axios from \"axios\";\r\nvar columns = [\r\n  { title: \"Project Name\", field: \"project\" },\r\n  {\r\n    title: \"Programmer\",\r\n    field: \"programmer\",\r\n    lookup: {\r\n      Prachi: \"Prachi\",\r\n      Ketan: \"Ketan\",\r\n      Karishma: \"Karishma\",\r\n      Kaleem: \"Kaleem\",\r\n    },\r\n  },\r\n  { title: \"Task\", field: \"task\" },\r\n  {\r\n    title: \"Status\",\r\n    field: \"status\",\r\n    lookup: {\r\n      \"in-process\": \"In Process\",\r\n      \"on-hold\": \"On Hold\",\r\n      completed: \"Completed\",\r\n    },\r\n  },\r\n  {\r\n    title: \"Open\",\r\n    field: \"action\",\r\n    render: (rowData) => (\r\n      <Link to={{ pathname: \"/details\", rowData }}>\r\n        <Button variant=\"contained\" color=\"primary\" className=\"float-right\">\r\n          Open\r\n        </Button>\r\n      </Link>\r\n    ),\r\n  },\r\n];\r\n\r\nexport default function MaterialTableDemo() {\r\n  const history = useHistory();\r\n  var [projects, setProjects] = useState([]);\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"http://localhost:4000/projects\")\r\n      .then((response) => {\r\n        setProjects(response.data.reverse());\r\n        console.log(projects);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div style={{ position: \"fixed\", bottom: \"20px\", right: \"20px\" }}>\r\n        <Link to={\"/create\"}>\r\n          <Fab color=\"primary\" aria-label=\"add\" size=\"small\">\r\n            <AddIcon />\r\n          </Fab>\r\n        </Link>\r\n      </div>\r\n      <MaterialTable\r\n        title=\"Project tracker\"\r\n        columns={columns}\r\n        data={projects}\r\n        options={{ actionsColumnIndex: -1, addRowPosition: \"first\" }}\r\n        // editable={{\r\n        //   onRowAdd: (newData) =>\r\n        //     new Promise((resolve) => {\r\n        //       resolve();\r\n\r\n        //       var date = new Date();\r\n\r\n        //       var today =\r\n        //         date.getDate() +\r\n        //         \"/\" +\r\n        //         (date.getMonth() + 1) +\r\n        //         \"/\" +\r\n        //         date.getFullYear();\r\n\r\n        //       newData = { ...newData, date: today };\r\n        //       console.log(newData);\r\n        //       axios\r\n        //         .post(\"http://localhost:4000/projects/add\", newData)\r\n        //         .then((res) =>\r\n        //           axios\r\n        //             .get(\"http://localhost:4000/projects\")\r\n        //             .then((response) => {\r\n        //               setProjects(response.data.reverse());\r\n        //               console.log(projects);\r\n        //             })\r\n        //             .catch(function (error) {\r\n        //               console.log(error);\r\n        //             })\r\n        //         );\r\n        //     }),\r\n        // }}\r\n      />\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport axios from \"axios\";\r\nimport {\r\n  useHistory,\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n} from \"react-router-dom\";\r\n\r\nvar columns = [\r\n  { title: \"Date\", field: \"date\", editable: \"never\" },\r\n  {\r\n    title: \"Programmer\",\r\n    field: \"programmer\",\r\n    lookup: {\r\n      Prachi: \"Prachi\",\r\n      Ketan: \"Ketan\",\r\n      Karishma: \"Karishma\",\r\n      Kaleem: \"Kaleem\",\r\n    },\r\n  },\r\n  { title: \"Task\", field: \"task\" },\r\n  {\r\n    title: \"Status\",\r\n    field: \"status\",\r\n    lookup: {\r\n      \"in-process\": \"In Process\",\r\n      \"on-hold\": \"On Hold\",\r\n      completed: \"Completed\",\r\n    },\r\n  },\r\n];\r\nexport default function MaterialTableDemo(props) {\r\n  const history = useHistory();\r\n  var [tasks, setTasks] = useState([]);\r\n  if (props.location.rowData == undefined) {\r\n    history.push(\"/\");\r\n  }\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\r\n        \"http://localhost:4000/tasks/history/\" + props.location.rowData.project\r\n      )\r\n      .then((response) => {\r\n        setTasks(response.data.reverse());\r\n        console.log(tasks);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <h4>\r\n        <span className=\"small-font\">Project:</span>{\" \"}\r\n        <span className=\"text-primary\">{props.location.rowData.project}</span>\r\n      </h4>\r\n      <hr className=\"hr\"></hr>\r\n      <p>\r\n        Last task <b>{props.location.rowData.task}</b> done by{\" \"}\r\n        <b>{props.location.rowData.programmer}</b> and status :{\" \"}\r\n        <b>{props.location.rowData.status}</b>\r\n      </p>\r\n\r\n      <MaterialTable\r\n        title=\"Task History\"\r\n        columns={columns}\r\n        data={tasks}\r\n        options={{ actionsColumnIndex: -1, addRowPosition: \"first\" }}\r\n        editable={{\r\n          onRowAdd: (newData) =>\r\n            new Promise((resolve) => {\r\n              resolve();\r\n\r\n              var date = new Date();\r\n\r\n              var today =\r\n                date.getDate() +\r\n                \"/\" +\r\n                (date.getMonth() + 1) +\r\n                \"/\" +\r\n                date.getFullYear();\r\n\r\n              newData = { ...newData, date: today };\r\n              newData = { ...newData, project: props.location.rowData.project };\r\n\r\n              axios\r\n                .post(\"http://localhost:4000/tasks/add\", newData)\r\n                .then((res) =>\r\n                  axios\r\n                    .get(\r\n                      \"http://localhost:4000/tasks/history/\" +\r\n                        props.location.rowData.project\r\n                    )\r\n                    .then((response) => {\r\n                      setTasks(response.data.reverse());\r\n                    })\r\n                    .catch(function (error) {\r\n                      console.log(error);\r\n                    })\r\n                );\r\n            }),\r\n          onRowUpdate: (newData, oldData) =>\r\n            new Promise((resolve) => {\r\n              resolve();\r\n              if (oldData) {\r\n                axios\r\n                  .post(\r\n                    \"http://localhost:4000/tasks/update/\" + oldData._id,\r\n                    newData\r\n                  )\r\n                  .then((res) =>\r\n                    axios\r\n                      .get(\r\n                        \"http://localhost:4000/tasks/history/\" +\r\n                          props.location.rowData.project\r\n                      )\r\n                      .then((response) => {\r\n                        setTasks(response.data.reverse());\r\n                      })\r\n                      .catch(function (error) {\r\n                        console.log(error);\r\n                      })\r\n                  );\r\n              }\r\n            }),\r\n          onRowDelete: (oldData) =>\r\n            new Promise((resolve) => {\r\n              resolve();\r\n              //handle here\r\n              if (tasks.length == 1) {\r\n                console.log(\r\n                  \"Cant delete the last task consider deleting the project\"\r\n                );\r\n                //return false;\r\n              }\r\n              axios\r\n                .get(\"http://localhost:4000/tasks/delete/\" + oldData._id)\r\n                .then((res) =>\r\n                  axios\r\n                    .get(\r\n                      \"http://localhost:4000/tasks/history/\" +\r\n                        props.location.rowData.project\r\n                    )\r\n                    .then((response) => {\r\n                      setTasks(response.data.reverse());\r\n                    })\r\n                    .catch(function (error) {\r\n                      console.log(error);\r\n                    })\r\n                )\r\n                .catch((err) => console.log(err));\r\n            }),\r\n        }}\r\n      />\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport CreateProject from \"./components/createProject\";\nimport DataTable from \"./components/material\";\nimport ProjectDetails from \"./components/ProjectDetails\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport { AppBar, Toolbar, Typography, Button } from \"@material-ui/core\";\nimport \"./App.css\";\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div className=\"container-fluid\">\n          <div className=\"header row bg-primary p-2\">\n            <div className=\"container\">\n              <div className=\"row\">\n                <div className=\"col\">\n                  <img\n                    src=\"https://www.iresearchservices.com/public/frontend/assets/images/logo.png\"\n                    alt=\"irs logo\"\n                  ></img>\n                </div>\n                <div className=\"col\">\n                  <div className=\"float-right \">\n                    <Link className=\"btn text-white m-2\" to={\"/\"}>\n                      Home\n                    </Link>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <br></br>\n        <div className=\"container\">\n          <Switch>\n            <Route exact path=\"/\" component={DataTable} />\n            <Route exact path=\"/details\" component={ProjectDetails} />\n            <Route exact path=\"/create\" component={CreateProject} />\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}